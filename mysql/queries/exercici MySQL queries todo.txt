/*Base de dades Tienda
Llista el nom de tots els productos que hi ha en la taula producto.
*/
SELECT nombre FROM producto;

/*Llista els noms i els preus de tots els productos de la taula producto.
*/
SELECT nombre, precio FROM producto;

/*Llista totes les columnes de la taula producto.
*/
SELECT * FROM producto;
/*opcion 2*/
SELECT `COLUMN_NAME` FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE `TABLE_SCHEMA`='tienda' AND `TABLE_NAME`='producto';

/*
Llista el nom dels productos, el preu en euros i el preu en dòlars estatunidencs (USD).
*/
SELECT nombre, precio, round(precio*1.14, 2) as precio_usd FROM tienda.producto;

/*Llista el nom dels productos, el preu en euros i el preu en dòlars estatunidencs (USD). Utilitza els següents àlies per a les columnes: nom de producto, euros, dolars.
*/
SELECT nombre as "nom de producto", precio as euros, round(precio*1.14, 2) as dolars FROM tienda.producto;

/*Llista els noms i els preus de tots els productos de la taula producto, convertint els noms a majúscula.
*/
SELECT UPPER(nombre), precio as euros FROM tienda.producto;

/*Llista els noms i els preus de tots els productos de la taula producto, convertint els noms a minúscula.
*/
SELECT LOWER(nombre), precio as euros FROM tienda.producto;

/*Llista el nom de tots els fabricants en una columna, i en una altra columna obtingui en majúscules els dos primers caràcters del nom del fabricant.
*/
SELECT nombre, UPPER(substring(nombre, 1, 2)) as doscar FROM tienda.fabricante;

/*Llista els noms i els preus de tots els productos de la taula producto, arrodonint el valor del preu.
*/
SELECT nombre, ROUND(precio) FROM tienda.producto;

/*Llista els noms i els preus de tots els productos de la taula producto, truncant el valor del preu per a mostrar-lo sense cap xifra decimal.
*/
SELECT nombre, floor(precio) FROM tienda.producto;

/*Llista el codi dels fabricants que tenen productos en la taula producto.
*/
SELECT fabricante.codigo FROM fabricante INNER JOIN producto ON fabricante.codigo = producto.codigo_fabricante;

/*Llista el codi dels fabricants que tenen productos en la taula producto, eliminant els codis que apareixen repetits.
*/
SELECT fabricante.codigo FROM fabricante INNER JOIN producto ON fabricante.codigo = producto.codigo_fabricante GROUP BY fabricante.codigo;

/*Llista els noms dels fabricants ordenats de manera ascendent.
*/
SELECT nombre FROM fabricante ORDER BY nombre ASC;

/*Llista els noms dels fabricants ordenats de manera descendent.
*/ 
SELECT nombre FROM fabricante ORDER BY nombre DESC;

/*Llista els noms dels productos ordenats en primer lloc pel nom de manera ascendent i en segon lloc pel preu de manera descendent.
*/
SELECT nombre FROM producto ORDER BY nombre ASC, precio DESC;

/*Retorna una llista amb les 5 primeres files de la taula fabricante.
*/ 
SELECT nombre FROM fabricante LIMIT 5;

/*Retorna una llista amb 2 files a partir de la quarta fila de la taula fabricante. La quarta fila també s'ha d'incloure en la resposta.
*/
SELECT nombre FROM fabricante LIMIT 2 OFFSET 3;

/*Llista el nom i el preu del producto més barat. (Utilitzi solament les clàusules ORDER BY i LIMIT). NOTA: Aquí no podria usar MIN(preu), necessitaria GROUP BY
*/
SELECT nombre, precio FROM producto ORDER BY precio ASC LIMIT 1;

/*Llista el nom i el preu del producto més car. (Utilitzi solament les clàusules ORDER BY i LIMIT). NOTA: Aquí no podria usar MAX(preu), necessitaria GROUP BY.
*/
SELECT nombre, precio FROM producto ORDER BY precio DESC LIMIT 1;

/*Llista el nom de tots els productos del fabricant el codi de fabricant del qual és igual a 2.
*/
SELECT nombre FROM producto WHERE codigo_fabricante = 2;

/*Retorna una llista amb el nom del producte, preu i nom de fabricant de tots els productes de la base de dades.
*/
SELECT producto.nombre, producto.precio, fabricante.nombre AS fabricante FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo;

/*Retorna una llista amb el nom del producte, preu i nom de fabricant de tots els productes de la base de dades. Ordeni el resultat pel nom del fabricador, per ordre alfabètic.
*/
SELECT producto.nombre, producto.precio, fabricante.nombre AS fabricante FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo ORDER BY fabricante.nombre ASC;

/*Retorna una llista amb el codi del producte, nom del producte, codi del fabricador i nom del fabricador, de tots els productes de la base de dades.
*/
SELECT producto.codigo, producto.nombre, fabricante.codigo AS cod_fabricante, fabricante.nombre AS fabricante FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo;

/*Retorna el nom del producte, el seu preu i el nom del seu fabricant, del producte més barat.
*/
SELECT producto.nombre, precio, fabricante.nombre AS fabricante FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo ORDER BY precio ASC LIMIT 1;

/*Retorna el nom del producte, el seu preu i el nom del seu fabricant, del producte més car.
*/
SELECT producto.nombre, precio, fabricante.nombre AS fabricante FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo ORDER BY precio DESC LIMIT 1;

/*Retorna una llista de tots els productes del fabricador Lenovo.
*/
SELECT producto.* FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Lenovo";

/*Retorna una llista de tots els productes del fabricant Crucial que tinguin un preu major que 200€.
*/
SELECT producto.* FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Crucial" AND producto.precio > 200;

/*Retorna un llistat amb tots els productes dels fabricants Asus, Hewlett-Packardy Seagate. Sense utilitzar l'operador IN.
*/
SELECT producto.* FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = "Asus" OR fabricante.nombre = "Hewlett-Packard" OR fabricante.nombre = "Seagate";

/*Retorna un llistat amb tots els productes dels fabricants Asus, Hewlett-Packardy Seagate. Utilitzant l'operador IN.
*/
SELECT producto.* FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.nombre IN ("Asus", "Hewlett-Packard", "Seagate");

/*Retorna un llistat amb el nom i el preu de tots els productes dels fabricants el nom dels quals acabi per la vocal e.
*/
SELECT producto.nombre, precio FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE RIGHT(fabricante.nombre, 1) = 'e';

/*Retorna un llistat amb el nom i el preu de tots els productes el nom de fabricant dels quals contingui el caràcter w en el seu nom.
*/
SELECT producto.nombre, precio FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE instr(fabricante.nombre, 'w');

/*Retorna un llistat amb el nom de producte, preu i nom de fabricant, de tots els productes que tinguin un preu major o igual a 180€. Ordeni el resultat en primer lloc pel preu (en ordre descendent) i en segon lloc pel nom (en ordre ascendent)
*/
SELECT producto.nombre, precio, fabricante.nombre FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE precio >= 180 ORDER BY precio DESC, producto.nombre ASC;

/*Retorna un llistat amb el codi i el nom de fabricant, solament d'aquells fabricants que tenen productes associats en la base de dades.
*/
SELECT fabricante.codigo, fabricante.nombre FROM fabricante INNER JOIN producto ON fabricante.codigo = producto.codigo_fabricante GROUP BY fabricante.codigo;

/*Retorna un llistat de tots els fabricants que existeixen en la base de dades, juntament amb els productes que té cadascun d'ells. El llistat haurà de mostrar també aquells fabricants que no tenen productes associats.
*/
SELECT * FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante;

/*Retorna un llistat on només apareguin aquells fabricants que no tenen cap producte associat.
*/
SELECT * FROM fabricante LEFT JOIN producto ON fabricante.codigo = producto.codigo_fabricante WHERE producto.codigo_fabricante IS NULL;

/*Retorna tots els productes del fabricador Lenovo. (Sense utilitzar INNER JOIN).
*/
SELECT producto.* FROM producto LEFT JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.NOMBRE = 'Lenovo';
/*opción 2*/
SELECT * FROM producto WHERE producto.codigo_fabricante IN (SELECT fabricante.codigo FROM fabricante WHERE fabricante.NOMBRE = 'Lenovo');

/*Retorna totes les dades dels productes que tenen el mateix preu que el producte més car del fabricador Lenovo. (Sense utilitzar INNER JOIN).
*/
SELECT producto.* FROM producto WHERE precio = (SELECT MAX(precio) FROM producto WHERE producto.codigo_fabricante = (SELECT codigo FROM fabricante WHERE fabricante.NOMBRE = 'Lenovo'));

/*Llista el nom del producte més car del fabricador Lenovo.
*/
SELECT nombre FROM producto WHERE precio = (SELECT MAX(precio) FROM producto WHERE producto.codigo_fabricante = (SELECT codigo FROM fabricante WHERE fabricante.NOMBRE = 'Lenovo'));

/*Llista el nom del producte més barat del fabricant Hewlett-Packard.
*/
SELECT nombre FROM producto WHERE precio = (SELECT MIN(precio) FROM producto WHERE producto.codigo_fabricante = (SELECT codigo FROM fabricante WHERE fabricante.NOMBRE = 'Hewlett-Packard'));

/*Retorna tots els productes de la base de dades que tenen un preu major o igual al producte més car del fabricador Lenovo.
*/
SELECT producto.* FROM producto WHERE precio >= (SELECT MAX(precio) FROM producto WHERE producto.codigo_fabricante = (SELECT codigo FROM fabricante WHERE fabricante.NOMBRE = 'Lenovo'));

/*Llesta tots els productes del fabricador Asus que tenen un preu superior al preu mitjà de tots els seus productes.
*/
SELECT producto.* FROM producto INNER JOIN fabricante ON producto.codigo_fabricante = fabricante.codigo WHERE fabricante.nombre = 'Asus' AND precio > (SELECT AVG(precio) FROM producto WHERE producto.codigo_fabricante = (SELECT codigo FROM fabricante WHERE fabricante.NOMBRE = 'Asus'));



/*Base de dades Universidad
Retorna un llistat amb el primer cognom, segon cognom i el nom de tots els alumnes. 
El llistat haurà d'estar ordenat alfabèticament de menor a major pel primer cognom, segon cognom i nom.
*/
SELECT * FROM universidad.persona WHERE tipo = 'alumno' ORDER BY apellido1, apellido2, nombre;

/*Esbrina el nom i els dos cognoms dels alumnes que no han donat d'alta el seu número de telèfon en la base de dades.
*/
SELECT nombre, apellido1, apellido2 FROM universidad.persona WHERE tipo = 'alumno' AND telefono IS NULL; 

/*Retorna el llistat dels alumnes que van néixer en 1999.
*/
SELECT * FROM universidad.persona WHERE tipo = 'alumno' AND (fecha_nacimiento >=  CAST('1999-01-01' AS DATE)  AND fecha_nacimiento < CAST('2000-01-01' AS DATE));

/*Retorna el llistat de professors que no han donat d'alta el seu número de telèfon en la base de dades i a més la seva nif acaba en K.
*/
SELECT * FROM universidad.persona WHERE tipo = 'profesor' AND telefono IS NULL AND right(nif, 1) = 'K';

/*Retorna el llistat de les assignatures que s'imparteixen en el primer quadrimestre, en el tercer curs del grau que té l'identificador 7.
*/
SELECT * FROM universidad.asignatura WHERE id_grado = 7 AND curso = 3 AND cuatrimestre = 1;

/*Retorna un llistat dels professors juntament amb el nom del departament al qual estan vinculats. El llistat ha de retornar quatre columnes, primer cognom, segon cognom, nom i nom del departament. El resultat estarà ordenat alfabèticament de menor a major pels cognoms i el nom.
*/
SELECT apellido1, apellido2, persona.nombre, departamento.nombre AS departamento FROM persona
INNER JOIN profesor ON persona.id = id_profesor INNER JOIN departamento ON id_departamento = departamento.id WHERE tipo = 'profesor' ORDER BY apellido1, apellido2, nombre;

/*Retorna un llistat amb el nom de les assignatures, any d'inici i any de fi del curs escolar de l'alumne amb nif 26902806M.
*/
SELECT asignatura.nombre, curso_escolar.anyo_inicio, curso_escolar.anyo_fin FROM persona INNER JOIN alumno_se_matricula_asignatura ON persona.id = alumno_se_matricula_asignatura.id_alumno INNER JOIN asignatura ON alumno_se_matricula_asignatura.id_asignatura = asignatura.id INNER JOIN curso_escolar ON alumno_se_matricula_asignatura.id_curso_escolar = curso_escolar.id WHERE nif = '26902806M';

/*Retorna un llistat amb el nom de tots els departaments que tenen professors que imparteixen alguna assignatura en el Grau en Enginyeria Informàtica (Pla 2015).
*/
SELECT DISTINCT departamento.nombre FROM departamento INNER JOIN profesor ON departamento.id = profesor.id_departamento INNER JOIN asignatura ON profesor.id_profesor = asignatura.id_profesor INNER JOIN grado ON asignatura.id_grado = grado.id WHERE grado.nombre = 'Grado en Ingeniería Informática (Plan 2015)';
/*OPCION 2*/
SELECT DISTINCT nombre FROM universidad.departamento WHERE id IN (SELECT id_departamento FROM profesor WHERE id_profesor IN (SELECT DISTINCT id_profesor FROM universidad.asignatura WHERE id_grado = (SELECT id FROM grado WHERE grado.nombre = 'Grado en Ingeniería Informática (Plan 2015)')))


/*Retorna un llistat amb tots els alumnes que s'han matriculat en alguna assignatura durant el curs escolar 2018/2019.
*/
SELECT * FROM persona WHERE id IN (SELECT DISTINCT id_alumno FROM alumno_se_matricula_asignatura WHERE id_curso_escolar = (SELECT id FROM curso_escolar WHERE anyo_inicio = 2018 AND anyo_fin = 2019));

/*
Resolgui les 6 següents consultes utilitzant les clàusules LEFT JOIN i RIGHT JOIN.
Retorna un llistat amb els noms de tots els professors i els departaments que tenen vinculats. 
El llistat també ha de mostrar aquells professors que no tenen cap departament associat. 
El llistat ha de retornar quatre columnes, nom del departament, primer cognom, segon cognom i nom del professor. 
El resultat estarà ordenat alfabèticament de menor a major pel nom del departament, cognoms i el nom.
*/
SELECT departamento.nombre AS departamento, apellido1, apellido2, persona.nombre FROM persona LEFT JOIN profesor ON persona.id = profesor.id_profesor LEFT JOIN departamento ON profesor.id_departamento = departamento.id WHERE tipo = 'profesor' ORDER BY departamento, apellido1, apellido2, persona.nombre;

/*Retorna un llistat amb els professors que no estan associats a un departament.
*/
SELECT * FROM persona WHERE tipo = 'profesor' AND id NOT IN (SELECT id_profesor FROM profesor);

/*Retorna un llistat amb els departaments que no tenen professors associats.
*/
SELECT * FROM departamento WHERE id NOT IN (SELECT DISTINCT id_departamento FROM profesor);

/*Retorna un llistat amb els professors que no imparteixen cap assignatura.
*/
SELECT * FROM persona WHERE tipo = 'profesor' AND persona.id NOT IN (SELECT DISTINCT id_profesor FROM asignatura WHERE id_profesor IS NOT NULL);

/*Retorna un llistat amb les assignatures que no tenen un professor assignat.
*/
SELECT * FROM asignatura WHERE id_profesor IS NULL;

/*Retorna un llistat amb tots els departaments que no han impartit assignatures en cap curs escolar.
*/
SELECT * FROM departamento WHERE id NOT IN(SELECT DISTINCT profesor.id_departamento FROM asignatura INNER JOIN profesor ON asignatura.id_profesor = profesor.id_profesor);

/*
Consultes resum:
Retorna el nombre total d'alumnes que hi ha.
*/
SELECT COUNT(*) FROM persona WHERE tipo = 'alumno';
/*Calcula quants alumnes van néixer en 1999.
*/
SELECT COUNT(*) FROM persona WHERE tipo = 'alumno' AND (fecha_nacimiento >=  CAST('1999-01-01' AS DATE)  AND fecha_nacimiento < CAST('2000-01-01' AS DATE));

/*Calcula quants professors hi ha en cada departament. El resultat només ha de mostrar dues columnes, una amb el nom del departament 
i una altra amb el nombre de professors que hi ha en aquest departament. El resultat només ha d'incloure els departaments que tenen professors associats 
i haurà d'estar ordenat de major a menor pel nombre de professors.
*/
SELECT departamento.nombre, COUNT(id_profesor) AS num_profesors FROM departamento INNER JOIN profesor ON departamento.id = profesor.id_departamento GROUP BY departamento.id ORDER BY num_profesors DESC;

/*Retorna un llistat amb tots els departaments i el nombre de professors que hi ha en cadascun d'ells. Tingui en compte que poden existir departaments que no tenen professors associats. Aquests departaments també han d'aparèixer en el llistat.
*/
SELECT departamento.nombre, COUNT(id_profesor) AS num_profesors FROM departamento LEFT JOIN profesor ON departamento.id = profesor.id_departamento GROUP BY departamento.id;

/*Retorna un llistat amb el nom de tots els graus existents en la base de dades i el nombre d'assignatures que té cadascun. Tingui en compte que poden existir graus que no tenen assignatures associades. Aquests graus també han d'aparèixer en el llistat. El resultat haurà d'estar ordenat de major a menor pel nombre d'assignatures.
*/
SELECT grado.nombre, COUNT(asignatura.id) AS num_asignaturas FROM universidad.grado LEFT JOIN asignatura ON grado.id = asignatura.id_grado GROUP BY grado.id ORDER BY num_asignaturas DESC;

/*Retorna un llistat amb el nom de tots els graus existents en la base de dades i el nombre d'assignatures que té cadascun, dels graus que tinguin més de 40 assignatures associades.
*/
SELECT grado.nombre, COUNT(asignatura.id) AS num_asignaturas FROM universidad.grado LEFT JOIN asignatura ON grado.id = asignatura.id_grado GROUP BY grado.id HAVING num_asignaturas > 40 ORDER BY num_asignaturas DESC;

/*Retorna un llistat que mostri el nom dels graus i la suma del nombre total de crèdits que hi ha per a cada tipus d'assignatura. El resultat ha de tenir tres columnes: nom del grau, tipus d'assignatura i la suma dels crèdits de totes les assignatures que hi ha d'aquest tipus.
*/
SELECT grado.nombre, asignatura.tipo, SUM(asignatura.creditos) AS creditos FROM universidad.grado INNER JOIN asignatura ON grado.id = asignatura.id_grado GROUP BY grado.nombre, asignatura.tipo;

/*Retorna un llistat que mostri quants alumnes s'han matriculat d'alguna assignatura en cadascun dels cursos escolars. El resultat haurà de mostrar dues columnes, una columna amb l'any d'inici del curs escolar i una altra amb el nombre d'alumnes matriculats.
*/
SELECT curso_escolar.anyo_inicio, COUNT(id_alumno) AS num_matriulats FROM alumno_se_matricula_asignatura INNER JOIN curso_escolar ON id_curso_escolar = curso_escolar.id GROUP BY id_curso_escolar;

/*Retorna un llistat amb el nombre d'assignatures que imparteix cada professor. El llistat ha de tenir en compte aquells professors que no imparteixen cap assignatura. El resultat mostrarà cinc columnes: id, nom, primer cognom, segon cognom i nombre d'assignatures. El resultat estarà ordenat de major a menor pel nombre d'assignatures.
*/
SELECT persona.id, persona.nombre, persona.apellido1, persona.apellido2, COUNT(asignatura.id) AS num_assignatures FROM persona INNER JOIN asignatura ON persona.id = asignatura.id_profesor WHERE persona.tipo = 'profesor' GROUP BY id_profesor ORDER BY num_assignatures DESC;

/*Retorna totes les dades de l'alumne més jove.
*/
SELECT * FROM persona WHERE persona.tipo = 'alumno' ORDER BY fecha_nacimiento LIMIT 1;

/*Retorna un llistat amb els professors que tenen un departament associat i que no imparteixen cap assignatura.
*/
SELECT * FROM universidad.persona WHERE id IN (SELECT id_profesor FROM universidad.profesor WHERE id_profesor NOT IN (SELECT DISTINCT id_profesor FROM universidad.asignatura WHERE id_profesor IS NOT NULL));
